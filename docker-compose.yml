services:
  mailhog:
    container_name: mailhog.accounts.larcity
    image: mailhog/mailhog
    platform: linux/amd64
    restart: unless-stopped
    ports:
      - '1025:1025'
      - '8025:8025'

  # Doc: https://ngrok.com/docs/using-ngrok-with/docker/#:~:text=Using%20ngrok%20with%20Docker%20Compose
  tunnel:
    container_name: ngrok.accounts.larcity
    image: ngrok/ngrok
    restart: unless-stopped
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTH_TOKEN}
      NGROK_CONFIG: /etc/ngrok.yml
    command:
      # CLI docs: https://ngrok.com/docs/agent/cli/#ngrok-start
      - "start"
      - "--all"
    volumes:
      # Be sure to run bin/thor lx-cli:tunnel:init to generate the ngrok.yml file
      - ./config/ngrok-via-docker.yml:/etc/ngrok.yml
    ports:
      - '4040:4040'

  redis-store:
    container_name: redis.accounts.larcity
    image: redis:7
    restart: unless-stopped
    ports:
      - '16079:6379'
    volumes:
      - ./db/development/redis:/data
    entrypoint:
      - redis-server
      - --save 60 1
      - --loglevel warning

  app-store:
    container_name: db.accounts.larcity
    image: postgres:15.4
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${APP_DATABASE_NAME}
      POSTGRES_USER: ${APP_DATABASE_USER}
      POSTGRES_PASSWORD: ${APP_DATABASE_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust # IMPORTANT allows all connections without a password - experimental only!
    ports:
      - '16032:5432'
    volumes:
      - ./db/development/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./db/development/postgres/data:/var/lib/postgresql/data
      - ./db/development/postgres/downloads:/usr/local/downloads

networks:
  default:
    driver: bridge
